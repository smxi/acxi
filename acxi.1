.TH ACXI 1 "2019\-08\-02" acxi "acxi manual"
.SH NAME
acxi  \- Command line audio conversion tool
.SH SYNOPSIS
.IP * 2
Syncing: \fBacxi\fR [\fB\-a\fR extensions] [\fB\-\-clean\fR] 
[\fB\-c\fR extensions] 
[\fB\-d\fR destination-path] [\fB\-f\fR] [\fB\-\-fork\fR 0-xx] 
[\fB\-i\fR {flac|raw|shn|wave}] [\fB\-o\fR {flac|mp3|ogg|opus}] 
[\fB\-q\fR NUMBER] [\fB\-s\fR source\-path] 
.IP * 2
Tagging: \fBacxi\fR [\fB\-\-autotag\fR] [\fB\-\-autotag\-create\fR] 
[\fB\-\-autotag\-create\-single\fR] [\fB\-\-no\-replaygain\fR] 
[\fB\-\-remove\-images\fR]
.IP * 2
Checkums: \fBacxi\fR [\fB\-\-checksum\fR] [\fB\-\-checksum\-delete\fR] 
.IP * 2
Output Controls: \fBacxi\fR [\fB\-\-basic\fR] [\fB\-\-full\fR]
[\fB\-\-log\fR {0-3}] [\fB\-\-quiet\fR] [\fB\-\-verbose\fR] 
.IP * 2
Miscellaneous:  [\fB\-h\fR] [\fB\-U\fR] [\fB\-v\fR]
.IP * 2
Debugging: \fBacxi\fR [\fB\-\-debug\fR]  [\fB\-\-nlink\fR] 
[\fB\-\-no\-nlink\fR] [\fB\-\-test\fR] 


.SH DESCRIPTION
\fBacxi\fR is a command line audio conversion program. It converts 
and syncs all desired source lossless files to the desired output 
format, and to adifferent directory location. 

Supports lossless input formats flac/raw/shn/wav. Output formats are flac, 
ogg, opus, or mp3. raw/shn can only output to flac. mp3 can only have 
flac as input format.

By default, it will also copy over most common filetypes like gif, jpg, png, 
txt, pdf, doc, docx, and a few others. You can change the defaults using 
a configuration file, or the \fB\-c\fR or \fB\-a\fR options..

The destination directory cannot be the same as the source directory, but
it can be inside of the source directory.

It can also generate md5 and ffp checksum files if required, as well
as tag using \fBauto.tag\fR method.

\fBacxi\fR runs pretests on each start to make sure input and output
directories are valid, conversion programs for input and output formatting
programs are present, and other user values are correct.

.SH DEPENDENCIES
For backward compatibility, acxi requires only Perl 5.010 (or newer), 
so it should run on anything. Several features (copy, make directory, 
find files) were moved from *nix commands to Perl native commands in
version 3, which should make acxi fully platform agnostic.
.IP * 2
\fBOgg\fR encoding requires \fBoggenc\fR (Debian/Ubuntu package: \fBvorbis-tools\fR).
.IP * 2
\fBOpus\fR encoding requires \fBopusenc\fR (Debian/Ubuntu package: \fBopus-tools\fR).
.IP * 2
\fBMP3\fR encoding requires: \fBlame\fR and \fBflac\fR. Source file must be flac. 
MP3 encoding does not support wav or raw input formats.
.IP * 2
\fBSHN \-> \fBFLAC\fR conversion requires the codec \fBshorten\fR and \fBffmpeg\fR.
.IP * 2
\fB\-\-autotag\fR requires \fBmetaflac\fR for \fBVORBIS\fR tagging.
.IP * 2
\fB\-\-checksum\fR and \fB\-\-checksum\-delete\fR require \fBffmpeg\fR 
and \fBmd5sum\fR (or any comparable program that generates md5sums). 
Md5 generating logic may be moved to straight Perl to remove the md5 
program requirement.
.IP * 2
\fB\-U\fR Self-updater requires \fBcurl\fR. 
.PP
In theory, acxi 3.x should run on Windows and Macs, but I have not
tested that, but as long as the source/destination directory paths and
the application/configuration paths are correct, it should 'just work'.

.SH USING OPTIONS
For example:
.B acxi
\fB\-o mp3\fR or \fBacxi \-fo opus\fR or \fBacxi \-d /home/you/music\fR

Note that some options have long and short forms. The short form is used
when available in examples in order to keep things simple.

.SH OPTIONS
.TP
.B \-a [extensions]\fR, \fB\-\-append [extensions]\fR
Takes one or more comma separated extensions. Do not use whitespaces
in this list. These will be appended on to the current list being 
used on a one time basis. This can be useful if you want to copy 
over a specific file type for one sync action without
having to make a full list with \fB\-c\fR.

Sample: \fBacxi \-a md5\fR will add md5 file type to copy list.

.TP
.B \-A\fR, \fB\-\-autotag\fR
Requires specially formatted file, default name \fBauto.tag\fR, 
to be put into each music collection directory. See the file for 
explanations.

FLAC input files only. OGG/Opus may be added. Will search source 
directory for \fBauto.tag\fR and update each collection/album that
has that file present with the tagging information contained in it.

Note that all existing tags are removed. Default is to preserve
the existing \fBREPLAYGAIN\fR tags in the \fBauto.tag\fR file
since the assumption is those were generated for a reason.

See github acxi page for a blank sample file, but make sure to
use \fB\-\-autotag\-create\fR or \fB\-\-autotag\-create\-single\fR 
if you want to preserve \fBREPLAYGAIN\fR data.

Notes on \fBIMAGE\fR: Avoid using large images, and as far as I can 
tell, there's no point in using anything other than the standard 
'cover' type image (type 3). Keep sizes down by optimizing the 
image down to around 30\-60 KiB, 300\-400 pixel width. If you 
make a mistake, or want to undo the 
images, use \fB\-\-remove\-images \-\-autotag\fR after updating the 
\fBauto.tag\fR file by either removing the value for \fBIMAGE\fR
or changing the value. Most media players I tested on only pay 
attention to the main image, and only one of them. Don't use a flac
file as a way to store large high resolution images as a general
rule, it just makes the entire collection pointlessly bloated.

.TP
.B \-C\fR, \fB\-\-autotag\-create\fR
Creates the \fBauto.tag\fR file in the directory, and populates it
with field names, and per track blocks that include the track file
name so you can just fill out the fields you want. Will also 
populate the \fBTRACKNUMBER\fR and \fBTRACKTOTAL\fR fields if you 
use the \fB\-\-autotag\-create\-single\fR option instead.

All existing \fBREPLAYGAIN\fR tags for the audio files are preserved
and used in the auto.tag file. If want to remove those, use the 
\fB\-\-no\-replaygain\fR option. 

.TP
.B \-S\fR, \fB\-\-autotag\-create\-single\fR
When creating \fBauto.tag\fR file, as well as populating the per track
file names, it also fills in the \fBTRACKTOTAL\fR and \fBTRACKNUMBER\fR
fields.

Do not use for multidisk recordings since the totals per disk and
the track numbering for the second or more disks will be wrong, but
for single disks, it will speed up slightly the time required to 
manually populate the \fBauto.tag\fR file.

.TP
.B \-\-basic\fR
Single line per operation screen output, default value for acxi.
Same as \fB\-\-log 1\fR

.TP
.B \-\-checksum\fR
Create \fB.ffp\fR and \fB.md5\fR checksum files in your source directory.
Checksum files are only created inside directories where flac
files are found. Use \fB\-\-checksum\-delete\fR if you also want to delete 
existing checksum files before creating new ones. 
Only flac input type is supported.

This will not create md5 sums for for files in directories that 
do not contain flac files, because that creates a very complicated 
logical puzzle which is hard to accurately or reliably resolve in
code.

Do not use together with other cleaning/syncing options!

.TP
.B \-\-checksum\-delete\fR
Will first delete all \fB.md5\fR, \fB.md5.txt\fR, \fB.ffp\fR, and 
\fB.ffp.txt\fR files before creating new checksum files. Note that some 
audio processing tools add \fB.txt\fR to the checksum file name, 
which creates undesirable outcomes since some tools that use \fB.ffp\fR 
or \fB.md5\fR files don't recognize the files if they have the \fB.txt\fR 
extension added on.

I can think of very few reasons to want to preserve \fB.ffp\fR or 
\fB.md5\fR files, since they should in general reflect what the actual 
files you have are.

.TP
.B \-\-clean\fR
Clean directories and files from destination (compressed) directories 
which are not present in the source music directories. Will show you the
directories or files to be removed before deleting them, and you have to
confirm the deletion of each set two times before it will actually delete
it. Runs before the syncing starts.

Take care with this one, if you have other compressed formats in your
compressed directory than your default $OUTPUT_TYPE format, it will 
want to delete all those, so do not use this option unless your compressed
directories are literal true copies of your source directories.

To confirm deletion of each group, you must first type 'delete' then
hit enter, then type 'yes' to confirm the deletion. This should avoid
errors and unintended deletions.

Note that this feature does not run in silent/quiet mode because it should
never be used automatically, or without explicit confirmation by the user.
It can be enabled using the CLEAN configuration option below so that 
acxi always cleans up before it starts syncing.

.TP
.B \-c [extensions]\fR, \fB\-\-copy [extensions]\fR
Comma separated list of extensions for file types you want to sync to your
lossy music directory. Overrides default values. Use lowercase, but it's
case insensitive internally. Do not include the period in the extension.

Default values are: bmp doc docx gif jpg jpeg odt pdf png tif txt

If you use no value, it will not copy anything.

Sample: \fB\-c txt,pdf,png,jpg,jpeg,gif\fR

.TP
.B \-\-debug\fR
All output available, including debugger data for some events.
Same as \fB\-\-log 4\fR

.TP
.B \-d [path]\fR, \fB\-\-destination [path]\fR
Full path to the directory where you want the processed lossy
(eg, ogg) files to go.

.TP
.B \-f\fR, \fB\-\-force\fR
Overwrites all the mp3/ogg/opus/jpg/txt etc. files, even if they already 
exist. This is useful if you for example want to change compression
quality on existing files.

.TP
.B \-F\fR, \fB\-\-fork [0-xx]\fR
Uses Perl module \fBParallel::ForkManager\fR to allow for forking of audio
file conversions actions. This can speed up your syncing a lot depending on how 
many threads your CPU can support and how many you assign with this option.

Supports integer values \fB0\fR or greater, but tests show 1 is slower than 
not using forking at all. \fB0\fR is default, and disables forking.

Some debugging features will be slightly distorted if fork is used,
but it is only cosmetic.

See also configuration file option \fBFORK\fR if you want to set this permanently.

Please note that this can have strange consequences if you run it on a huge
job, even if you use only half your threads, the system can still act strange
as a result of running it with multiple forks.

.TP
.B \-\-full\fR
Full screen output, including full verbosity of flac / oggenc / opusenc / lame 
conversion tools for flac, mp3, ogg, or opus output. Same as \fB\-\-log 3\fR

.TP
.B \-h\fR, \fB\-\-help\fR
This help menu.

.TP
.B \-i [flac|raw|shn|wav]\fR, \fB\-\-input [flac|raw|shn|wav]\fR
Input type. Supported types: flac, wav, raw, shn. 

\fBraw/shn\fR \- only support flac output. 

\fBshn\fR \- requires the shorten codec, which you usually have to build yourself 
unless you can find a package for it. Use \fB\-\-log 3\fR to test the 
first time to make sure you have shorten codec installed.

.TP
.B \-\-log [0-4]\fR
Dynamically set LOG_LEVEL. Helps for debugging certain types of issues
where you might want to see the full level 3 debugging information from
audio codec conversions for example. 

\fB0\fR \- shuts off all output except errors. Same as \fB\-\-quiet\fR.

\fB1\fR \- basic single line output. Same as \fB\-\-basic\fR.

\fB2\fR \- more verbose output. Same as \fB\-\-verbose\fR.

\fB3\fR \- full output, incuding all conversion tool output. Same as \fB\-\-full\fR.

\fB4\fR \- debug output, includes some extra debugging data. Don't use in general.
Same as \fB\-\-debug\fR.

.TP
.B \-\-nlink\fR
Set \fB$File::Find::dont_use_nlink = 0\fR. Default is \fB1\fR. Only change this 
if you have a reason to do so. Setting value to \fB0\fR may make \fBcifs\fR type 
file system reads fail, on a \fBsamba\fR network share for example. If you 
encounter issues with the default value, please post an issue on the acxi 
github page.

See this PerlMonks thread for an explanation: 
\fIhttps://www.perlmonks.org/?node_id=1180606\fR

.TP
.B \-\-no\-nlink\fR
Set \fB$File::Find::dont_use_nlink = 1\fR. This is the default value. 
See \fB\-\-nlink\fR for details.

.TP
.B \-\-no\-replaygain\fR
Remove any existing \fBREPLAYGAIN\fR tags when creating a new \fBauto.tag\fR
file. See \fB\-\-autotag\-create\fR for details.

.TP
.B \-o [flac|mp3|ogg|opus]\fR, \fB\-\-output [flac|mp3|ogg|opus]\fR
Output type. Supported types: flac, ogg, opus, mp3

\fBmp3\fR \- only supports flac input type

\fBflac\fR \- only supports shn, or raw input types.

.TP
.B \-q [number]\fR, \fB\-\-quality [number]\fR
Set compression quality level.

\fBmp3\fR \- n can be an integer between 0\-9 (variable bit rate), 0 is 
largest file / highest quality.

\fBogg\fR \- n can be between \-1 and 10. 10 is the largest file/highest quality. 
Fractions are allowed, e.g. \fB\-o ogg \-q 7.54\fR

\fBopus\fR \-  n can be an integer between 6\-256 (bitrate). 256 is largest file/highest
quality.

Note that using a higher or lower quality than you used to create
the compressed files will not result in redoing those files unless 
you use the \fB\-f\fR / \fB\-\-force\fR option to force the overwrite 
of the existing files.

.TP
.B \-\-quiet\fR, \fB\-\-silent\fR
Turns off all screen output, except for error messages. 
Same as \fB\-\-log 0\fR

.TP
.B \-\-remove\-images\fR
Use with \fB\-\-autotag\fR. Will remove all embedded image data, and the
associated padding, prior to tagging (and adding new image if applicable)
audio file. Note that simply removing image data will leave the padding
in place. 

This is the full command required to fully restore a flac file size. 
Failure to use \fB\-\-dont\-use\-padding\fR leaves the file size unchanged.

\fBmetaflac \-\-remove \-\-block\-type=PICTURE,PADDING \-\-dont\-use\-padding file.flac\fR

.TP
.B \-s [path]\fR, \fB\-\-source [path]\fR
Path to the top-most directory containing your source files (eg, flac).

.TP
.B \-\-test\fR
Test your configurations without actually doing the copy and sync 
operations. Activates \fB \-\-full\fR as well for more complete output.

.TP
.B \-U\fR, \fB\-\-update\fR
Self updater, will update acxi and its man page. Non GNU/LInux 
will probably require changing the default values, which are set 
in \fBUSER VARIABLES\fR for curl, acxi and man page acxi.1. 
Requires \fBcurl\fR.
                  
.TP
.B  \-\-verbose\fR
Without full verbosity of full, no flac/oggenc/opusenc/lame for mp3,
ogg, or opus conversion process screen output, but more verbose than
default. Same as \fB\-\-log 2\fR

.TP
.B \-v\fR, \fB\-\-version\fR
Show acxi version.

.SH CONFIGURATION FILE
You can see by running \fBacxi \-h\fR the configuration file locations.

acxi will read its configuration/initialization files in the
following order.

.TP
.B STANDARD DETECTION
\fB/etc/acxi.conf\fR contains the default configurations. These can be 
overridden by user configurations found in one of the following locations.
 If \fB$XDG_CONFIG_HOME/acxi.conf\fR exists, it use it, else if
\fB$HOME/.conf/acxi.conf\fR exists, it will use it, and as a last default,
the legacy location \fB$HOME/.acxi.conf\fR is used, i.e.:

\fB$XDG_CONFIG_HOME/acxi.conf\fR > \fB$HOME/.conf/acxi.conf\fR >
\fB$HOME/.acxi.conf\fR

.TP
.B MANUALLY SET
\fB$CONFIG_DIRECTORY\fR \- Sample: 
\fB$CONFIG_DIRECTORY='/path/to/configuration/directory'\fR

NOTE: only use this method if you are running Windows, or any OS without 
\fB$HOME\fR or \fB$XDG_CONFIG_HOME\fR environmental variables, or
if you want the configuration file to be located somewhere else. 

This value must be set on top of acxi in the \fBUSER MODIFIABLE VALUES\fR
section because that is what it will use to locate the configuration file. 
acxi will look for acxi.conf inside that directory. This path value will
override/ignore all other configuration files.

.SH CONFIGURATION OPTIONS
The following corresponds to the \fBUSER MODIFIABLE VALUES\fR section
in the top comment header of acxi.

.TP
.B APPLICATION PATHS
The following set your system path for the required applications:

\fBCOMMAND_FLAC\fR \- Sample: \fBCOMMAND_FLAC=/usr/bin/flac\fR (default path)

\fBCOMMAND_FLAC_OUT\fR \- Sample: \fBCOMMAND_FLAC_OUT=/usr/bin/ffmpeg\fR (default path)

\fBCOMMAND_LAME\fR \- Sample: \fBCOMMAND_LAME=/usr/bin/lame\fR (default path)

\fBCOMMAND_METAFLAC\fR \- Sample: \fBCOMMAND_METAFLAC=/usr/bin/metaflac\fR 

\fBCOMMAND_OGG\fR \- Sample: \fBCOMMAND_OGG=/usr/bin/oggenc\fR (default path)

\fBCOMMAND_OPUS\fR \- Sample: \fBCOMMAND_OPUS=/usr/bin/opusenc\fR (default path)

.TP
.B SOURCE/DESTINATION/CONFIGURATION DIRECTORIES
NOTE: \fBDESTINATION_DIRECTORY\fR cannot be the same as \fBSOURCE_DIRECTORY\fR.

\fBCLEAN\fR \- Sample: \fBCLEAN=true\fR Switches on/off \fB\-\-clean\fR to 
apply cleaning action to your destination directories. Accepted
values: \fB[enable|on|true|yes]\fR or \fB[disable|off|false|no]\fR. Default
is false.

\fBSOURCE_DIRECTORY\fR \- Sample: \fBSOURCE_DIRECTORY=/home/fred/music\fR 

This the original, working, like flac, wav, etc.

\fBDESTINATION_DIRECTORY\fR \- Sample: 
\fBDESTINATION_DIRECTORY=/home/fred/music/ogg\fR

This is the processed compressed music files, ie, ogg, opus, or mp3. Destination 
cannot be the same as Source directory, although it can be inside of the source 
directory.

.TP
.B INPUT/OUTPUT
The following are NOT case sensitive,ie flac/FLAC, txt/TXT will be 
found. INPUT_TYPE and OUTPUT_TYPE will be forced to lower case 
internally.

Changing quality levels will not redo existing files.

\fBINPUT_TYPE\fR \- Sample: \fBINPUT_TYPE=flac\fR 

\fBOUTPUT_TYPE\fR \- Sample: \fBOUTPUT_TYPE=mp3\fR 

\fBCOPY_TYPES\fR \- Sample: \fBCOPY_TYPES=doc,docx,bmp,jpg,jpeg\fR Use this
to override the default file types acxi will sync. Set to 'none', 
if you only want to sync the music files, not copy over images, text files,
etc.

\fBQUALITY_FLAC\fR \- Sample: \fBQUALITY_FLAC=5\fR Supported values: 0\-8. 0 is 
the largest file size / fastest to run. NOTE: this is not currently used.

\fBQUALITY_MP3\fR \- Sample: \fBQUALITY_MP3=2\fR Supported values: 0\-9. 0 is 
the largest file size / highest quality.

\fBQUALITY_OGG\fR \- Sample: \fBQUALITY_OGG=8.25q\fR Supported values: \-1 to 10. 
10 is the largest file size / highest quality. Supports fractions.

\fBQUALITY_OPUS\fR \- Sample: \fBQUALITY_OPUS=256\fR Supported values: 6\-256. 
256 is the largest file size / highest quality / best bitrate.

.TP
.B AUTO\-TAGGING
These only apply to the \fB\-\-autotag\fR option, and set a different name 
for the default auto.tag filename. The filename must be unique and never 
occur in any other context in your music collection files.

\fBTAG_FILE\fR \- Sample: \fBTAG_FILE=autotags.tag\fR 

\fBauto.tag\fR \- Thes filename to be used to autotag. Default is \fBauto.tag\fR.
Filename must be unique, and not be found anywhere else in your collection. Do
not change unless you have a very good reason to.

.TP
.B CHECKSUMS
These only apply to the \fB\-\-checksum\fR option, and set a different name 
than the default file names used in the top section of acxi. Note that the
names should not include an extension, since that is added on automatically.

\fBFFP_FILE\fR \- Sample: \fBFPP_FILE=fingerprint\fR This is the name of the 
generated .ffp file, not including the .ffp extension, you want your flac ffp
files to have. 

\fBMD5_FILE\fR \- Sample: \fBMD5_FILE=checksum\fR This is the name of the 
generated .md5 file, not including the .md5 extension, you want your md5
checksum files to have.

.TP
.B ADVANCED
The following are advanced options which should only be used if you know
what you are doing:

\fBDONT_USE_NLINK\fR \- Sample: \fBDONT_USE_NLINK=0\fR 
This sets \fBFile::Find::dont_use_nlink to \fB0\fR or \fB1\fR. \fB1\fR is 
default. Generally you should be using \fB1\fR, but in certain cases \fB0\fR 
may be faster. Test using the \fB\-\-nlink\fR option to disable nlink, and 
see that option for more information.

\fBFORK\fR \- Sample: \fBFORK=4\fR 
This uses Perl's \fBParallel::ForkManager\fR and accepts values of 0 or more.
Note that 0 will not create a fork. See \fB\-\-fork\fR for details.
Using this will speed up your syncing a lot if you have more than a 1 core CPU.

.TP
.B SCREEN/DEBUGGING OUTPUT
You can change \fBLOG_LEVEL\fR either at the top of the \fBacxi\fR file itself, 
or in the configuration file, by setting the verbosity/debugging level to what 
you want. 

Sample: \fBLOG_LEVEL=3\fR 

\fB0\fR \- quiet/silent \- no output at all (except for errors).

\fB1\fR \- basic \- single line per operation. This is the default, so you don't need 
to change it.

\fB2\fR \- verbose \- but without the actual conversion data from codecs

\fB3\fR \- full \-  all available information. Note: with \fB\-F\fR / \fB\-\-fork\fR 
conversion output may be ordered somewhat randomly since it shows each thread's results 
as it completes as well as when it started.

\fB4\fR \- debug \-  all available plus some specialized debugging information.

.TP
.B SELF UPDATER
These are only for the \fB\-U\fR self updater feature. The path defaults must be
changed for non\-GNU/Linux systems in most cases.

\fBCOMMAND_CURL\fR \- Sample: \fBCOMMAND_CURL=/usr/local/bin\fR

\fBMAN_DIRECTORY\fR \- Sample: \fBSELF_DIRECTORY=/usr/share/man/man1\fR This is the 
directory the man page is in.

\fBSELF_DIRECTORY\fR \- Sample: \fBSELF_DIRECTORY=/usr/bin\fR This is the directory that
\fBacxi\fR is in.

.SH BUGS
Please report bugs using the following resources.

.TP
.B Issue Report
File an issue report:
.I https://github.com/smxi/acxi/issues
.TP
.B Forums
Post on acxi forums:
.I https://techpatterns.com/forums/about1491.html
.TP
.B IRC irc.oftc.net#smxi
You can also visit
.I irc.oftc.net
\fRchannel:\fI #smxi\fR to post issues.

.SH HOMEPAGE
.I  https://github.com/smxi/acxi

.SH  AUTHOR AND CONTRIBUTORS TO CODE

.B acxi
is a fork and full rewrite of flac2ogg.pl.

Copyright (c) Harald Hope, 2010\-2019

Forking logic:  prupert. 2019-07

MP3 tagging: Odd Eivind Ebbesen \- \fIwww.oddware.net\fR \- 
<oddebb at gmail dot com>

Copyright (c) (flac2ogg.pl) 2004 \- Jason L. Buberel \- jason@buberel.org

Copyright (c) (flac2ogg.pl) 2007 \- Evan Boggs \- etboggs@indiana.edu

Thanks for trying acxi out, I hope it's useful to you.
