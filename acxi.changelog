================================================================================
Version: 3.5.01
Patch: 
Date: 2021-??-??
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fix for --clean, completed some options that were started but were slightly
incomplete, like -Z now supports all input types, and --resample now applies
a decent default Shibata dithering when resampling down to 16 bit.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. -Z -v2 only shows ffp/hash data for metaflac/FLAC sourced data. That's how it 
is, the data is not present in ffprobe sourced intput file data.

--------------------------------------------------------------------------------
BUGS:

1. See Fix 1, needs to enforce path syntax for --clean -s/-d, otherwise will 
offer to delete your entire destination.

--------------------------------------------------------------------------------
FIXES:

1. Found issue with --clean, -s and -d require either full relative to user HOME 
or full path (~/music, /home/user/music). Never tested other path possibilities 
so never noticed these when not complete path. Also added protection against 
starting -d/-s paths with ../. That leads to very unpredictable results. 

Both of these are handled now in Validation.

2. In size tool, failed to round KiB values.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Big upgrade for -Z/-Xq, now accepts all input types. Non FLAC input types use 
ffprobe. FLAC defaults to using metaflac for data. Using the --ffprobe option 
forces FLAC analysis to use ffprobe, which is easily 10-30x slower than 
metaflac, and also doesn't contain the flac ffp md5 hash signatures.

2. Added default dither type if resampling to < 24 bit depth of Shibata. Added 
configuration and --dither item to allow users to change dither type. For 
--resample only. Default type is shibata, which puts noise at higher 
frequencies. Note that ffmpeg did not apply dithering by default.

Used ffmpeg list: https://ffmpeg.org/ffmpeg-resampler.html

Types: 0; rectangular; triangular; triangular_hp; lipshitz; shibata; 
low_shibata; high_shibata; f_weighted; modified_e_weighted; improved_e_weighted

--------------------------------------------------------------------------------
CHANGES:

1. Validation now permits non flac input types for -Z/-Xq options.

2. For -v2 cleaned up syncing output a bit. Added resample info for -v2 as well.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Man update for -s/-d path syntax for --clean, and -s/-d not using ../.

2. Man/help update for expansion of -Z/-Xq input types, and for --ffprobe 
override option.

--------------------------------------------------------------------------------
CODE:

1. Refactored package Analyze to support non flac input types, and also to show 
proper input type being processed. Changed a few other components for this as
well, like Checksums, Validation, get_options().

2. Moved get_options into new package OptionsHandler, the verify section was
getting a bit unwieldy, best to have it be in its own sub. This also aligns
inxi and acxi in style, which is good.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 27 Sep 2021 14:22:26 -0700

================================================================================
Version: 3.5.00
Patch: 
Date: 2021-09-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

This is the final tidying up of the new features introduced and evolved in 
3.4.01, and given the number of new features, and changes, this also will be 
rolled into next major version, 3.5.00.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. No new ones.

--------------------------------------------------------------------------------
BUGS:

1. In one case, --test, by triggering -v3, would trip a debugger that should 
have been a --debug switch, and since there was no internal actual $b_debug, 
there was no way to run pure debugger switches internally. This is now 
corrected.

--------------------------------------------------------------------------------
FIXES:

1. None this release.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added -Xl (el, not uc eye), sets all lines lower case, then upper cases 
anything found after a '.'. Good for cases where the entire file is upper case, 
but it's got a lot of sentences, and you don't want the upper case first of all 
primary words that u gives you. Requires in most cases going back in and 
re-uppercasing some items, but it's less work to do it this way for extreme 
cases.

--------------------------------------------------------------------------------
CHANGES:

1. --test no longer activates --verbosity 3, that was creating annoying output
in situations where --test is being used to generate screen only output, for
example: acxi -s./ -SE --test

Now --test just tests, which was its intended role, and you can tell add what -v 
levels you want. 

2. --debug no longer alters $VERBOSITY levels, it just sets a $b_debug flag. 
This disconnects --test, --debug, and -v actions completely.

3. Changed line starter for -X from 'Fix: ' to '; : ', and for -Xw, ' ' to ';  '. 
That looks a lot cleaner, and creates a nice box effect around the info file 
output block. The '; : ' and ';  ' also make it more clear when the action was 
written and when not, without being visually messy.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updated --test, --debug, --verbosity, and CONFIG items to account for the 
changes in use of internal VERBOSITY and b_test/b_debug flags.

2. Refactored and made more useful README.txt, now it's updated to focus on all 
the acxi features, not just the syncing part, and also is divided into sections 
better, and is more readable, with enough information to get users started.

3. Cleaned up double spaces in man page.

--------------------------------------------------------------------------------
CODE:

1. Removed some weight from --test and --debug, see CHANGES 1,2. Changed 
if $VERBOSITY > 3 tests to if $b_debug. Removed VERBOSITY connection to --test.

2. Removed some development debuggers and fixed some comments for logic.

3. Added EOF closing comment to man page, should have implemented that years 
ago. That's required to validate man download via -U, it was using a test on a 
string in the man page, which isn't a good idea since that can change. 

4. Got rid of white space between negation ! and all items except things like 
-f, -d, -r.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 24 Sep 2021 17:30:17 -0700

================================================================================
Version: 3.4.01
Patch: 
Date: 2021-09-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Big update, lots of fixes, new features, enhanced features, cleaned up output, 
you name it, this one has it! Huge usability and processing speed improvements, 
with a focus on large bulk processing actions, and with -g globbing option, 
running bulk actions on a subset of directories.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. -E does not work in bulk jobs, only per flac directory.

--------------------------------------------------------------------------------
BUGS:

1. A code cleanup remove a few too many white spaces in front of ), in this 
case, for -T, that was required, not to clean up. Search and replace can be 
dangerous sometimes. This regression was probably introduced around 3.4.00 or 
so.

2. In cases of 1 single flac file, -K and --ffps would skip filename and show 
only the ffp hash. Metaflac required explicit --with-filename for metaflac 
output. Default is to print file name only when > 1 flac files found.

--------------------------------------------------------------------------------
FIXES:

1. -V exited on error, but should not have. This prevented bulk -V checks from 
running. Now error message goes to screen but it keeps looping. Useful for 
checking larger sets of audio files to determine which are corrupted.

2. -V, -K, -D: corrected indentation of output to make more readable/scannable.
Particularly useful if outputting results to file for many directories.

3. Added -Xn pattern, some cases where track number is DNN, converts to D-NN. 
as expected now. -Xd more date variants added.

4. Added 'Personnel:', 'Performers:' to performers pre ID.

5. Tiny fix, acxi was neglecting to apply the os path separator correctly in at
least one location, which in fringe cases could lead to windows failing under
certain conditions, though windows support is only theoretical.

6. Added error handler for trying to run -E/--prefill on any bulk job, flac 
files must be present in the given --source directory or it exits with error.

7. Fixed output for various features, corrected indentation errors, removed ... 
in some cases, added : for directory name processing features.

8. Polished up option mis-use error handling, polished up validation logic.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Going with Fix 1, -v3 now will output results of ffp test initially so you 
can get the full verbose version.

2. New feature: --dupes/--duplicates: allows checking collection for duplicates 
of flac files, then gives a report of the directories that had duplicates, and 
the directories that first had the files that were duplicated. Useful for 
trimming out redundant stuff from your collection. 

3. New feature: --analyze/-Z: prints to screen flac bits, sampling rate, track 
times (per file) found in -s source directory/ies. Also prints total time, total 
size, and average kbs of all flacs in directory. Depending it may be possible to 
extend this to other than flac.

-v1 (default) shows flac data in one line; -v 2 makes key: value pairs, one per 
line, adds ffp hash signature; -v 3 adds raw full seconds and file size in bytes 
to time/size info for file and totals.

4. Going along with --analyze, -Xq now includes avg kbs, total time and size of 
flacs, per directory of flacs.

5. New feature: --source-glob/-g: accepts wild card paths if you only want to 
update or check certain directories within the main --source working directory. 
Requires --source, wild card path must be within --source, like:

acxi -s ./ -g 'BandName*' -V

Will only verify folders starting with BandName. Remember to always quote the 
value otherwise your shell will expand the wild cards!! Accepts standard 
globbing options like {one,two,three}, [0-9], etc.

This is really useful if you want to carry out any acxi action/option on only a 
subset of directories inside of a larger collection, for example, setting the 
ARTIST tag value for all directories of that artist in that main directory.

acxi -s ./ -g '{FredDolans,Fred Dolans,Fred_Dolans}*' -T "ARTIST%:Fred Dolans"

6. New refined feature: --checksum-ffps/--ffps. Improves previous method of:
 acxi -s./ -K --no-md5sum --test
which is awkward. Prints output to screen, turns off md5 generation. Good for 
bulk ffp generation, output redirect to file, etc.

7. Finally added --resample {bits:khz} and --resample-override. This is useful 
for resampling 24 bit flacs to 16 bit, for example. Note that in general you 
want to resample to a sampling rate that evenly divides the starting rate, for 
example, with 24 bit, 192 or 96 khz original, resample to 16:48, or if for some 
reason you actually have 88.2khz sampling rate, resample to 16:44.1. Or if your 
starting sampling rate is 48khz, use 16:48.

Use -Z option to determine sample rates and bit depth of original you are 
resampling.

In general, do not resample to greater bit depths or sampling rates, that's 
pointless.

Note that if you resample 192, 96, or 48khz originals to 44.1 khz, the CD audio 
standard, you end up messing up the samples because almost all of them have to 
be synthesized, but if you use a sample rate that evenly divides with the start, 
no dithering or other undesirable results will occur, generally speaking.

--resample supports 16; 20; 24 bit and 44.1; 48; 88.2; 96; 192 defaults, which are in 
general the only ones you'd ever want to use. Syntax sample: 

--resample 16:48

--resample-override switch allows you to use the almost full range of options in 
--resample, 4-32 bits, 1-655 khz sampling rate.

--------------------------------------------------------------------------------
CHANGES:

1. Small changes in output, got rid of some '...' in processing / checking 
directory outputs, added ':' anytime the action references checking or 
processing a directory, that makes it more consistent and predictable overall.

Sample: 
Checking myDirectory...
becomes: 
Checking: myDirectory.

Sample:
Starting sync of StartDirectory
 to EndDirectory
becomes:
Starting sync of: StartDirectory
 to: EndDirectory

Exception is when the action uses print, not say, and the results of the action 
are printed on same line after the ...

2. Changed --exclude-append short form to -y, inconsistent to use -X, and want 
-X for --infofix short form. Actually this was also a bug, -X short had never 
been used for --exclude-append though it was supposed to have been, so no loss 
to anyone.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updated man, help for --duplicates, --analyze, --ffps, --resample, 
--resample-override.

2. Redid top SYNOPSIS section to include short forms, that makes it easier to
use as a reminder tool. Reordered items as well to be more clear.

--------------------------------------------------------------------------------
CODE:

1. Fully transitioned to 'say' when we want line breaks at end of print line.
This cleans the code up and makes it easier to see what's going on in various
line output scenarios. 'print' is used now when we do NOT want a linebreak at 
end of line, and in other more complex scenarios where it is appropriate.

2. Moved -G/--aggregate logic to package Aggregate, it's not really related to 
autotagging. Moved -X/--infofix to package InfoFix, Moved -Z/--analyze, and, 
-Xq logic to Analyze package. AutoTag and Checksums were getting too much 
clutter in them. 

3. Renamed/simplified launch/trigger subs names in Packages, forgot to do that 
when I made the classes for 3.0.0.

4. Reordered validation functions, and cleaned up and reorganized some of them
to get rid of redundant logic.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 21 Sep 2021 19:57:01 -0700

================================================================================
Version: 3.4.00
Date: 2021-08-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New major version that rolls up recent new -E, -X, --no-md5 features (now that 
they are reasonably stable), new changelog format, AAC support, and changed 
options for --verbosity,-v and --version, into 3.4.00.

Also some small bug fixes, tweaks, adjustments, and new feature --no-md5.

--------------------------------------------------------------------------------
BUGS:

1. --start had a bug when start > 1, it needed to subtract 1 from count to show
correct total in auto.tag. This was the expected result:

Actual totals: 15 tracks, 2 missing. --start 3, 13 real tracks.

It would have shown 16 track count in auto.tag in that case before the fix.

2. When using some features with -s [item-directory] instead of -s ./, paths 
were not reset correctly for all features, resulting in failed operations.

--------------------------------------------------------------------------------
FIXES:

1. Added more date syntax variants to -Xd date correct tool. Had failed to 
handle Month-DD-YYYY syntax. Fixed glitch that made MM/DD/[45]Y fail. Fixed 
Month DD, YYYY.

2. Added more track numbering variants to -Xn too. Failed to handle '01] '.

3. Tweaked --prefill, let it start looking for track numbers if line > 4.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added --no-md5 for -D/-K, to go along with --no-ffp. md5 generation takes a 
long time, and  isn't needed for certain purposes. This can be quite useful when 
checking many ffps from many recordings. For example:

acxi -s./ -K --no-md5 --test > ffps.txt

The --test flag makes it not do the actual ffp file creation, which isn't 
necessarily desirable.

2. Added 'q' to --infofix/-X, this lets you add in two rows after top band / gig
info header, Quality: /4 () and FLAC: bits/sample frequency (channels).

3. To go along with 2, added --info-rating {2-xxx} to let people set different 
default ratings. Also added INFO_RATING item to tagging user values section.

--------------------------------------------------------------------------------
CHANGES: 

1. Got rid of --log, --basic, --full, --verbose, and replaced them with 
-v/--verbosity [0-4]. Left --quiet and --debug, since those make sense. Left 
internal support for --basic, --full, --verbose, and --log to not break any user 
habits. I'm not sure why acxi ever used LOG_LEVEL, I suspect it was some legacy 
thing that was just used without thinking about it. But it's annoyed me for a 
while since it makes no sense either reading the code or trying to explain it in 
man/help since --log never logged anything, it was just a screen output 
verbosity switch.

-v [0-4] is also relatively standard option for verbosity levels, it's also less 
typing.

2. Got rid of -v as alternate for --version, having only --version is fine, and
was wasting the more useful -v short form for --verbosity.

3. Changed configuration variables LOG_LEVEL to VERBOSITY, but left internal 
support for legacy LOG_LEVEL. While top configurations will show $VERBOSITY, 
user configuration tool supports either. 

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Man, help updates for -v/--verbosity change,  and for new --no-ffp feature. 
Reordered configuration values section to be a bit more clear, some things were 
not alphabetically listed within sections, sections were slightly oddly ordered.
Added q explanation to --infofix and INFO_RATING to config section.

2. Made this changelog match new format of inxi.changelog, which is easier to 
work with, and easier to read. Using easier to scan subject headers BUGS, FIXES, 
ENHANCEMENTS, CHANGES, DOCUMENTATION, CODE, plus line dividers, and extra 
linebreaks to avoid having it all crammed together and hard to read.

--------------------------------------------------------------------------------
CODE:

1. More cleanups of unnecessary whitespace after ( or before ).

2. Refactored ffp/md5 create to match ffp/md5 verify, broke into 3 subs, which 
makes it cleaner.

3. Changed all internal uses of $LOG_LEVEL to $VERBOSITY, which is what it 
should have always been since acxi has never logged, and this was just an output 
verbosity feature all along.

4. Added space after all comments that contain logic or variables. This will let 
geany/scite users edit acxi with code folding. This is due to a scite folding 
engine weakness where it gets confused and tries to treat stuff after # as 
actual logic. 

================================================================================
Version: 3.3.29
Date: 2021-06-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

This is another big trader release, lots of new features, mostly specialized but 
very useful. Note that the official 'release' 3.3.28 was skipped because all 
these changes sort of flowed into one another, and took a while, and a lot of 
testing, to get stable and reasonably reliable.

While this will never be done, the logic is now radically enhanced, and really 
has optimized the process of dealing with audio collection tagging while not 
resorting to the types of automated and often drastically wrong bulk taggers, 
which can never be reliable due to the randomness of user data and behavior, but 
the steps are now very optimized and generally require very little effort to 
yield excellent and reliable tagging results.

Enjoy, while most of these new features are very specialized, if you recognize 
what is being done and appreciate the ability to create high quality and 
reliable tagging, you may just be among the people who will benefit from these 
changes. If not, well, that's fine too, this wasn't made for you in that case, 
so you can move along, nothing to see here.

--------------------------------------------------------------------------------
FIXES:

1. Updated error handlers for using non compatible options together, that logic 
had been too loose, and permitted using options that could not be used together.

2. For larger collections, had forgotten to 'prune' excluded directories from 
list of files to go through, that leads to slow downs when the dataset is very 
large, that now prunes as expected. that's for File::Find operations.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added support for AAC and M4A. Note that if you want tags to transfer, use 
the m4a container format, if not, use aac. This requires using either the native 
ffmpeg aac codec, or the better regarded libfdk_aac codec. Only supports input 
type flac.

2. --prefill / -E takes data from well structured and formatted info.txt files 
and transfers it to auto.tag file. Saves a lot of time. See --prefill-file 
filename for using alternate info file names, but I don't recommend doing that. 
Note that -E requires either -S or -M autotag creation options. See man page for 
required structures.

3. Added default -C/-S/-M auto.tag create to generate 10, not 8, performer 
lines. Why not, sometimes groups are big.

4. To compliment -E prefill, and speed up tagging even more, added 
-X/---infofix, which cleans up info.txt file in preparation for prefill of 
auto.tag. This is getting close to as much as can practically be done without 
implementiing machine learning, heh. But it's VERY fast now to process a 
standard show or recording. Any further speedups will result in much less time 
saved than these did. See man page for -X options and action explanations. d 
option fixes dates to ISO YYYY-MM-DD format; n fixes track numbers in file, 
which -E requires to be a specific format; t fixes upper/lower case track 
titles, wraps track times after title in parentheses if missing (-E ignores 
those when updating track titles), and w writes the changes to file. Without w, 
only what would have happened prints out in terminal, with w, the changes are 
written to file. Very effective and convenient.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. For the obsessive, made man page 80 columns wide, ok, who cares? nobody, 
except people trying to work with command line tools in absurdly narrow terminal 
windows, but there you have it. We aim to please. General man and help cleanup 
and fixes as well. Have to update and fix docs once in a while, afterall!!

================================================================================
Version: 3.3.27
Date: 2020-08-22
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fix!!! Oops... 3.3.26 flac > flac had issue.

--------------------------------------------------------------------------------
BUGS:

1. Many thanks to issue #9 who pointed out that the small changes that made flac 
to flac conversion possible inadvertently broke flac to lossy conversions, which 
was obviously a bad thing.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added opus type to --ffmpeg, to make it complete for the free audio codecs. 
Rarely used, but now you can.

--------------------------------------------------------------------------------
CODE:

1. Used this mistake to refactor the validations a bit more to make it easier to 
avoid such mistakes in the future, and also updated the man page to add some new 
options and features which were not completely documented, or documented 
inconsistently.

================================================================================
Version: 3.3.26
Date: 2020-08-18
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Flac > Flac conversion, tiny update

As changes go, this may be the smallest one ever, I think I only had to add 
something like 4 to 8 characters in acxi, but might as well call it the current 
acxi re releases.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Just because, well, sometimes in rare cases you might want to rerip flac 
files you got from some random place to a new set of flac files.

For example, if you get some old flacs, and just want to make sure they are 
actually up to date and with the quality level you want, you just run:

acxi -i flac -o flac -s [source] -d [destination] -q 8

and away you go, new flacs. Note, I came across a case where a very old flac 
file would not convert to a lossy format because there was something wrong with 
the flac formatting, the codec was too old that had been used to convert it, or 
something, in the end, with that one, I just used audacity, open file, export to 
itself as flac, then it all worked, but I thought, well, why not? Sometimes you 
have flacs you have little to no idea about how they were made, and maybe you 
prefer always having quality 8, as in the above example, and don't want to spend 
any time researching the old flac files.

================================================================================
Version: 3.3.25
Date: 2020-05-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fix release. -M used with --start exposed a small bug in auto.tag 
generation.

--------------------------------------------------------------------------------
BUGS:

1. Found a small bug, if -M multidisc auto.tag file generated, and --start used 
that is not 1, the disc totals would not reflect the different --start value.

There was actually another bug in the logic, but it was only exposed when -M + 
--start were used together.

================================================================================
Version: 3.3.24
Date: 2020-04-23
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Point release - enforce -s/--source use for tagging/checksum options.

--------------------------------------------------------------------------------
FIXES:

1. Only one change, but I realized I kept forgetting to set -s explicitly for 
-A, -C, -S, -M, -G, -T, -I, -V tagging or checksum options. That's actually 
quite dangerous to your collection, particularly when using something like -I or 
-T, and I'd made that mistake enough times to realize I had to enforce -s 
explicit use for these.

================================================================================
Version: 3.3.23
Date: 2020-04-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Two small fixes, to make things a bit more consistent and intuitive.

--------------------------------------------------------------------------------
FIXES:

1. Added 'UNSET' value to --tag, so you can remove a single or more tags and 
their content, not just modify or add them.

2. A slightly complicated logical puzzle, now --clean also removes excluded 
directories / files as expected, and subsequent sync acfions will not create the 
excluded directories, which was the case before this correction. 

================================================================================
Version: 3.3.22
Date: 2020-03-09
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Some small and convenient updates:

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added --start [integer] to let you make tag file generation numbering start 
from 0 to any integer. This lets you match your tagged track numbers to file 
track numbers, say, starting at 00.flac, or starting at 05.flac, now the acxi 
generated auto.tag will reflect that as long as you use the --start [integer] 
when generating the test file. Note that if you forget, you can just run acxi 
-Ss./ --test --start 0 for example which will print out the disk/track numbers 
to terminal and you can just copy that into your auto.tag file if you already 
had started it.

2. Another corner case feature, --recurse [integer], let's you run acxi only on 
the directory you want, going in from 0 to x levels. This has various utility, 
for instance, if you don't want to include a subdirectory of flacs, you would 
use -Ss./ --recurse 0 and it will only generate auto.tag data for the level you 
are in.

3. Issue #8 requested a way to override default behavior to skip all '.' dot 
files, added --dot, --no-dot [override for if you use DOT=true in configuration 
file], and configuration item DOT, which takes true/false value. Since false is 
the default acxi behavior, the only value that makes sense to use there is true, 
otherwise don't use that configuration item.

================================================================================
Version: 3.3.21
Date: 2020-01-22
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Several bug fixes in the 20/21 releases:

--------------------------------------------------------------------------------
BUGS:

1. Small bug introduced that made acxi not start on older Perls due to 
accidental use of a Perl 5.028 and newer feature.

2. acxi was not properly escaping the tag data for MP3 files, which led to 
failures in some cases of strange character use. 

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added support for AIF lossless type.

================================================================================
Version: 3.3.19
Date: 2019-12-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

This turned into a big release, lots of new features, mostly around making 
tagging and image embedding faster and easier. Also some bug fixes that matter 
in corner cases.

--------------------------------------------------------------------------------
FIXES:

1. Fixed -D checksum delete, better handling of weird ffp.txt and md5.txt type 
file names, now it will catch and delete more than before.
    
2. Finally figured out how to fix an annoying error that would pop up when 
File::Find was trying to read files in a root only readable directory, like 
lost+found, now correctly using File::Find::prune for all non readable 
directories. Could not use this for non-readable files because I found cases of 
readable files tripping the non readable input warning message. Only shows the 
message for each directory once per update to avoid redundant messages.

3. Found an oversight, file name escaping was not being done on tagging, only 
syncing, so I made new escape_file and unescape_file subroutines, and now 
everything escapes and unescapes as expected. Tested on worst case file names i 
use for testing purposes.
    
--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Expanded auto.tag to have 8 PERFORMER, 5 COMMENT, 4 SOURCE, items, and added 
CDDB and ISRC in case you want to add or preserve those CD database ID values. 
This should be enough lines to handle most common situations.

2. New feature! --image/-I takes file name, or full path, to image file to embed 
into flac files. This is a flac only feature. Note that I urge moving to opus if 
you like embedded album art, opus supports natively getting the meta data, 
including image blocks, from flac files, but ogg only supports the comment 
block, doing images with ogg is a pain and is probably never going to happen in 
acxi, unless someone provides a neat and clean patch.
   
3. Another new feature, --tag/-T, which takes an argument of structure: 
"TAG1%:value^^TAG2%:value", where TAGx is the name of the FLAC comment field you 
want to replace or update or add. This lets you update for example all the files 
in a folder to have the same GENRE, or update artist/album name, or dates, 
whatever.

4. Added -R as shortcut for --remove-images now that --images is running, that 
can be useful. Note that --autotag and --image will never add images if the flac 
file already has image blocks in it, so -R is required to force the removal 
there.
    
5. Added --remove-padding/-P option, to force attempt at padding removal on 
tagging updates. This really slows tagging down, and as far as I could tell, 
repeated tagging does not appear to change padding, so I made this a non default 
action for -A and -T actions.

================================================================================
Version: 3.3.18
Date: 2019-12-19
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Maintenance release. None massive, but they add up to a nice package of 
improvements and enhancements

--------------------------------------------------------------------------------
BUGS:

1. Fixed bug with ffmpeg based shn/wav/ to flac conversion. The flac quality was 
not being used, and it would always default to the ffmpeg default (5, I think). 
Technically, this was the cause: -aq / -q:a do not actually do anything, ffmpeg 
reverts to default quality 5 always. This is fixed by using -compression_level 
instead, which works as expected.

--------------------------------------------------------------------------------
FIXES:

1. Fixed missing linebreak in help menu, that made the output after last line 
for --clean fail to wrap, now it's all hunky-dory.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added a really silly but on rare occasion useful feature, now acxi will let 
you convert mp3 to flac. Why? don't do it, there's only a tiny handful of cases 
where this makes any sense at all. But now you can.

2.  Added 2 more PERFORMER%: items and 1 more COMMENT%: to default auto.tag, 
that avoids having to manually add them if you needed more, 6 performers seems 
to cover most cases.

--------------------------------------------------------------------------------
CODE:
  
1. Added case insensitive sorts, no idea how I missed that one, now as acxi 
chugs through your collection, the sorts will be a more intuitive case 
insensitive as the syncs etc run.  

================================================================================
Version: 3.3.17
Date: 2019-10-19
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

This is just a small point release.

--------------------------------------------------------------------------------
BUGS:

1. I'd neglected to reset the list of found files each time file find was used, 
which led to glitches when using the new -AD / -AK combination option.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. The main new feature is adding -M @ for alphabetical pattern matching, for 
cases where you want to use letters for disk numbers, like A-01.flac for 
example. There are cases where this makes sense, not often, but sometimes. This 
extends -M, which previously only supported the % ([0-9]) item, to support 
pretty much any real world multidisc indicator scenario in a file name.

================================================================================
Version: 3.3.16
Date: 2019-10-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Some small fixes and enhancements.

--------------------------------------------------------------------------------
FIXES:

1. Added backtick ` escape.

2. Adjusted default copy values, removed some big file types, pdf, doc, tif, 
which a lossy collection probably does not need.

3. Removed --alt-ag, which was awkward to use, now --aggregate accepts a comma 
separated list of file names and types.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added --exclude, to let people exclude any string or strings found in the 
value passed to it.

5. Made it possible to do: acxi -AD [or -AK] -s ... so you don't have to type 
the stuff out twice when tagging then generating checksum files.

================================================================================
Version: 3.3.14
Date: 2019-08-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Documentation only release.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updated man, help, and doc pages.

================================================================================
Version: 3.3.12
Date: 2019-08-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New feature added, -G.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. --aggregate/-G and --alt-ag [track id] which lets you collect all auto.tag 
files, or with --alt-ag, any other filename in a collection to one place. This 
can be useful for tracking changes and exchanging information about such things.

================================================================================
Version: 3.3.06
Date: 2019-08-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

A few small enhancements, -K and -D.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. New shortcuts: -K for --checksum; -D for --checksum-delete, -V for 
--checksum-verify. Got tired of typing the long forms.

================================================================================
Version: 3.3.05
Date: 2019-08-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New feature, -M.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. --autotag-create-multi / -M will follow a pattern you provide it to identify 
your track numbering scheme for multi disc sets.

This still has to be documented, but it's working well. I was initially thinking 
of making the logic 'smart' and to try to figure out automatically when file 
starters indicated disc numbers, but there are so many variants, it wasn't going 
to happen.

Note: this does not support multi folder disc storage, like:
 Disc 1/
 Disc 2/ 
because that's a real pain to deal with in automated systems that have to figure 
out where they are in your music library without actually knowing that. 

But assuming you've gotten rid of those legacy ways of storing per cd files, 
this will speed things up significantly, to a few minutes on a large multi disc 
set.

================================================================================
Version: 3.3.04
Date: 2019-08-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Fixes to checksum features.

--------------------------------------------------------------------------------
FIXES:

1. Stablized --checksum-verify, it now largely works as intended, checks against 
existing md5 files, and checks flac file integrity.

2. Converts windows or *nix line endings and folder paths to the local version 
so the .md5 sum file data will work no matter what OS generated the file or is 
checking it.

================================================================================
Version: 3.3.03
Date: 2019-08-09
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New --checksum-verify feature.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. New feature --checksum-verify, to be used, currently, with --checksum or 
--checksum-delete. Will also verify FLAC files. This is time consuming, and is 
not yet handled by forking, and may not be because making forking output 
consistent is a real pain.

================================================================================
Version: 3.3.02
Date: 2019-08-09
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fixes, fixes, new --ffmpeg experimental feature.

--------------------------------------------------------------------------------
BUGS:

1. --checksum was not correctly changing directories, and so would only make the 
checksums for the first directory it encountered in the following directories, 
resulting in checksum test failures, of course.

--------------------------------------------------------------------------------
FIXES:

1. Improvement. All the features now sort the file list so the files/directories 
are processed in order, which makes for nicer screen output.

2. Fixed some help menu ordering things.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added --ffmpeg flag. Don't use this, it's experimental, and so far the 
experiments don't look or work well.

--------------------------------------------------------------------------------
CHANGES:

1. Changed default opus bitrate to 144.

================================================================================
Version: 3.3.0
Date: 2019-07-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Rolling all the recent updates into acxi 3.3. I believe I've found all the 
issues I'm going to find on my own with tagging and image embedding.

--------------------------------------------------------------------------------
FIXES:

1. Better handling of file name/paths, now avoiding some errors that could 
happen if file name contained regex characters.
 
--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Self updater -U/--update. No need to manually grab man/acxi from github 
anymore, let acxi do it for you.

2. Autotagging: --autotag/-A, --autotag-create/-C, --autotag-create-single/-S, 
--remove-images, which work with the newly created auto.tag text file format for 
quickly creating the tag data for a collection/album. Does not support Forking.

3. Checksum generation: --checksum and --checksum-delete. Either only create, or 
first delete old files, then create new checksum files. Does not support 
Forking. Only support flac ffp and md5.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Documentation pages:
 https://smxi.org/docs/acxi-man.htm
 https://smxi.org/docs/acxi-options.htm

================================================================================
Version: 3.2.16
Date: 2019-07-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Self updater -U added.
 
--------------------------------------------------------------------------------
ENHANCEMENTS:

1. -U self updater. I got tired of manually updating it. Now it joins all the 
other *xi tools to have a self-updater. 

2. Preserves REPLAYGAIN values when creating autotag-create file. This can help 
when the people who made the source flacs took the time to set replaygain data, 
but did not do any other tagging, or did incorrect tagging.

================================================================================
Version: 3.2.11
Date: 2019-07-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

auto.tag prefills added for single, checksum improvements.
 
--------------------------------------------------------------------------------
ENHANCEMENTS:

1. --autotag-create-single will also fill in the TRACKTOTAL and TRACKNUMBER for 
a single disk set. Due to complexity of handling various user multidisk naming 
and folder schemes, too hard to automate. But for single disks, it will speed up 
the auto.tag file generation process.
 
--------------------------------------------------------------------------------
CHANGES:

1. --checksum-delete now triggers --checksum so you don't have to type it again.

================================================================================
Version: 3.2.8
Date: 2019-07-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bugs and new auto tag feature.
 
--------------------------------------------------------------------------------
BUGS:

 1. Found a long standing weakness that would result in some file paths/names 
containing regex characters, which would in some cases result in output or 
internal errors, failures to find paths. This has been corrected, and now all 
file trims use s/\Q$PATH\E// escapes, which I didn't know about. Those prevent 
anything in the variables executing as a regex character. Easy fix!

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. --autotag-create which creates an auto.tag file in the folder you are working 
on, prepopulated with track blocks with filenames already filled in.

================================================================================
Version: 3.2.4
Date: 2019-07-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New auto tag feature.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. --autotag which uses a file, auto.tag, which follows a specific syntax to 
automatically generate tags for a recording/album. Includes support for per 
track specifics, etc.

================================================================================
Version: 3.2.2
Date: 2019-07-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Fixes, new checksum features, docs updates.

--------------------------------------------------------------------------------
FIXES:

1. Trimming off source and destination directory paths from copy, sync, and 
checksum generation paths. Since those show at the beginning, there's no point 
in repeating them over and over. --log 3 / --full will show the full paths 
however if you want.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. --checksum and --checksum-delete. --checksum will create .md5 and .ffp 
checksum files in each directory in --source that contains flac files. Only flac 
lossless format supported. --checksum-delete if used together with --checksum 
will delete all .md5, .ffp, .m5.txt, and .ffp.txt. The latter two are because 
some tools add a .txt extension, which is an error.

Current requirements are metaflac for .ffp generation, and md5sum for md5 
generation, though I may move to native Perl for md5 since there is no strict 
need to use an external program for that.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Man and help updated to show checksum features, and also rearranged a bit 
more to make more readable. Note that you can view online versions  of the help 
and man at:

https://smxi.org/docs/acxi-man.htm
https://smxi.org/docs/acxi-options.htm

--------------------------------------------------------------------------------
CODE:

1. More refactoring, now it's pretty much done, all main logic is wrapped in 
packages aka classes, which makes working on it easier.

================================================================================
Version: 3.2.0
Date: 2019-07-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Big update. Forking, shn to flac, copy type improvements, --log output option,
docs updates.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. now supports forking, using either --fork/-F [0-xxx], or config value: 
FORK=[0-xx]. This lets you use multithreading to run big conversions more 
quickly. Note that with really big jobs, in some cases, the OS will act a bit 
odd after a while if you assigned too many forks, but in general is very fast 
and works well. Thanks prupert for this suggestion on techpattern.com/forums.

Requires Perl module Parallel::ForkManager, will exit if FORK is greater than 0 
and module not present.

2. Finally, option to convert shn to flac. Requires shorten codec library and 
ffmpeg. 

See README.txt for where to find the shorten codec if you don't have it (hint: 
if you can play shn files, you probably have it).

3. New option: -a/--append, which lets you append more copy types on a one time 
basis to your existing list. This can be useful if for example you are doing a 
one time conversion of a mixed flac/shn directory to all flac: 

acxi -i shn -o flac -s /my/shn-flacs -d /my/flacs -a flac 

will copy over your flacs to the flac, if any found, and convert the shn to 
flac.

4. Screen output verbosity can now be triggered by the new --log [0-3] if you 
prefer that way to trigger verbosity levels. --debug will keep working but may 
be used for something else in future versions.

--------------------------------------------------------------------------------
CHANGES:

1. Got rid of some confusing terms for screen output:
--debug becomes --full
--default becomes --basic

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Redo of man and help. Help reorganized into two sections, one for syncing 
options, like -c, -a, -d, -s, -i, -o, --fork, etc. The other is for screen 
output options, like -h, --version, --log, --basic, --full, --verbose.

--------------------------------------------------------------------------------
CODE:

1. Internal refactor to use packages/classes in some areas like Validation and 
configuration file processing. This makes the code easier to work on since you 
can fold those packages away in your code editor.

================================================================================
Version: 3.1.3
Date: 2019-07-05
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Fixes and docs updates. nlink options added.

--------------------------------------------------------------------------------
FIXES:

1. Issue #2 - fix for failure of File::Find to detect files or directories in a 
cifs mounted smb file system. 

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added default $File::Find::dont_use_nlink = 1 with override --nlink which 
sets it to 0, --no-nlink which sets it to 1, default, plus configuration item 
which allows for override as well via DONT_USE_NLINK item. Values 0 or 1. 1 is 
default.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updates to man page as well to note the new options and explanation.

================================================================================
Version: 3.1.2
Date: 2019-07-04
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bugs and fixes.

--------------------------------------------------------------------------------
BUGS:

1. When -q used, failed to assign quality level to opus.

--------------------------------------------------------------------------------
FIXES:

1. Improved error handling, now prints out all pretest errors before exiting. 
This should make it easier for new users to figure out how to setup acxi. Also 
made tests more granular, now does not run quality or application present tests 
if invalid input/output type. Note that acxi will exit with the last error 
return number found in that case.

================================================================================
Version: 3.1.1
Date: 2019-01-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bugs and Fixes.

--------------------------------------------------------------------------------
BUGS:

1. Ogg quality level assigned to opus which leads to the worst quality level for 
opus.

--------------------------------------------------------------------------------
FIXES:

1. Added two filters (for " and $) in path/file name. This corrected issue #1 by 
gyratory. Thanks gyratory for finding that oversight and filing an issue report.

================================================================================
Version: 3.1.0
Date: 2018-12-18
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Opus support, ogg fractional quality, docs.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added support for Opus output type.

2. Added Ogg quality fractional levels, and the -1 value.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Corrected man/comments/help inconsistencies.

================================================================================
Version: 3.0.0
Date: 2018-12-07
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New --clean, --test option, cleanups, fixes, bug fixes, man page added.

--------------------------------------------------------------------------------
BUGS:

1. Some tagging bugs were fixed for flac->mp3 generation.

--------------------------------------------------------------------------------
FIXES:

1. Improved error handling. More protections in place against user 
configuration and option use errors.

2. Improved output formatting, should usually fit in 80 column display.

3. Added the ability to have your target (compressed, lossy) directory inside 
your source directory.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. New --test option to test your configurations before actually running the 
syncs live.

2. New --clean option to remove files/directories not found in your source 
directory. Includes protections against accidental use.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Created a man page. 

--------------------------------------------------------------------------------
CODE:

1. Modernized Perl 5. The Perl runs with warnings/strict mode enabled as well.
