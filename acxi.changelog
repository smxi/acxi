===================================================================
Date: 2019-08-14
Version: 3.3.14
-------------------------------------------------------------------
Updated man, help, and doc pages.

===================================================================
Date: 2019-08-12
Version: 3.3.12
-------------------------------------------------------------------

New feature:
1. --aggregate/-G and --alt-ag [track id] which lets you collect all
auto.tag files, or with --alt-ag, any other filename in a collection
to one place. This can be useful for tracking changes and exchanging
information about such things.

===================================================================
Date: 2019-08-10
Version: 3.3.06
-------------------------------------------------------------------

New shortcuts: -K for --checksum; -D for --checksum-delete, -V
for --checksum-verify. Got tired of typing the long forms.

===================================================================
Date: 2019-08-10
Version: 3.3.05
-------------------------------------------------------------------

New Feature:
1. --autotag-create-multi / -M will follow a pattern you provide it
to identify your track numbering scheme for multi disc sets.

This still has to be documented, but it's working well. I was 
initially thinking of making the logic 'smart' and to try to figure
out automatically when file starters indicated disc numbers, but
there are so many variants, it wasn't going to happen.

Note: this does not support multi folder disc storage, like:
 Disc 1/
 Disc 2/ 
because that's a real pain to deal with in automated systems
that have to figure out where they are in your music library
without actually knowing that. 

But assuming you've gotten rid of those legacy ways of storing
per cd files, this will speed things up significantly, to a few
minutes on a large multi disc set.

===================================================================
Date: 2019-08-10
Version: 3.3.04
-------------------------------------------------------------------

Stablized --checksum-verify, it now largely works as intended,
checks against existing md5 files, and checks flac file integrity.

Converts windows or *nix line endings and folder paths to the local
version so the .md5 sum file data will work no matter what OS
generated the file or is checking it.

===================================================================
Date: 2019-08-09
Version: 3.3.03
-------------------------------------------------------------------

Enhancements:
1. New feature --checksum-verify, to be used, currently, with 
--checksum or --checksum-delete. Will also verify FLAC files.
This is time consuming, and is not yet handled by forking, and
may not be because making forking output consistent is a real pain.

===================================================================
Date: 2019-08-09
Version: 3.3.02
-------------------------------------------------------------------

Bug fix:

1 --checksum was not correctly changing directories, and
so would only make the checksums for the first directory it 
encountered in the following directories, resulting in checksum
test failures, of course.

Fixes:
1. Improvement. All the features now sort the file list so the 
files/directories are processed in order, which makes for nicer
screen output.
2. Fixed some help menu ordering things.

Experiments:
1. Added --ffmpeg flag. Don't use this, it's experimental, and
so far the experiments don't look or work well.

Changes:
1. Changed default opus bitrate to 144.

===================================================================
Date: 2019-07-27
Version: 3.3.0
-------------------------------------------------------------------
Rolling all the recent updates into acxi 3.3. I believe I've found 
all the issues I'm going to find on my own with tagging and image 
embedding.

New Features:
1. Self updater -U/--update. No need to manually grab man/acxi from
 github anymore, let acxi do it for you.
2. Autotagging: --autotag/-A, --autotag-create/-C,
 --autotag-create-single/-S, --remove-images, which work with the 
 newly created auto.tag text file format for quickly creating the 
 tag data for a collection/album. Does not support Forking.
3. Checksum generation: --checksum and --checksum-delete. Either 
 only create, or first delete old files, then create new checksum 
 files. Does not support Forking. Only support flac ffp and md5.
4. Documentation pages:
 https://smxi.org/docs/acxi-man.htm
 https://smxi.org/docs/acxi-options.htm
 
Fixes:
1. Better handling of file name/paths, now avoiding some errors 
 that could happen if file name contained regex characters.
 
===================================================================
Date: 2019-07-27
Version: 3.2.16
-------------------------------------------------------------------
New Feature:
1. -U self updater. I got tired of manually updating it. Now it 
joins all the other *xi tools to have a self-updater.
2. Preserves REPLAYGAIN values when creating autotag-create 
file. This can help when the people who made the source flacs
took the time to set replaygain data, but did not do any other
tagging, or did incorrect tagging.

===================================================================
Date: 2019-07-27
Version: 3.2.11
-------------------------------------------------------------------
New Feature:
1. --autotag-create-single will also fill in the TRACKTOTAL and 
TRACKNUMBER for a single disk set. Due to complexity of handling 
various user multidisk naming and folder schemes, too hard to 
automate. But for single disks, it will speed up the auto.tag file
generation process.

Changes:
1. --checksum-delete now triggers --checksum so you don't have to
type it again.

===================================================================
Date: 2019-07-26
Version: 3.2.8
-------------------------------------------------------------------
New Feature:
1. --autotag-create which creates an auto.tag file in the folder
you are working on, prepopulated with track blocks with filenames
already filled in.

Bugs/Fixes:
1. Found a long standing weakness that would result in some file
paths/names containing regex characters, which would in some cases
result in output or internal errors, failures to find paths.
This has been corrected, and now all file trims use s/\Q$PATH\E// 
escapes, which I didn't know about. Those prevent anything in the
variables executing as a regex character. Easy fix!

===================================================================
Date: 2019-07-24
Version: 3.2.4
-------------------------------------------------------------------
New Features:
1. --autotag which uses a file, auto.tag, which follows a specific
syntax to automatically generate tags for a recording/album. 
Includes support for per track specifics, etc.

===================================================================
Date: 2019-07-21
Version: 3.2.2
-------------------------------------------------------------------
New Features:
1. --checksum and --checksum-delete. --checksum will create .md5
and .ffp checksum files in each directory in --source that contains
flac files. Only flac lossless format supported. --checksum-delete
if used together with --checksum will delete all .md5, .ffp, 
.m5.txt, and .ffp.txt. The latter two are because some tools add 
a .txt extension, which is an error.

Current requirements are metaflac for .ffp generation, and md5sum
for md5 generation, though I may move to native Perl for md5 since
there is no strict need to use an external program for that.

man and help updated to show this, and also rearranged a bit more
to make more readable. Note that you can view online versions  
of the help and man at:

https://smxi.org/docs/acxi-man.htm
https://smxi.org/docs/acxi-options.htm

2. More refactoring, now it's pretty much done, all main logic is
wrapped in packages aka classes, which makes working on it easier.

3. Trimming off source and destination directory paths from copy,
sync, and checksum generation paths. Since those show at the 
beginning, there's no point in repeating them over and over.
--log 3 / --full will show the full paths however if you want.

===================================================================
Date: 2019-07-15
Version: 3.2.0
-------------------------------------------------------------------
Big update.

New features:
1. now supports forking, using either --fork/-F [0-xxx], or config
value: FORK=[0-xx]. This lets you use multithreading to run big 
conversions more quickly. Note that with really big jobs, in some
cases, the OS will act a bit odd after a while if you assigned too
many forks, but in general is very fast and works well. Thanks 
prupert for this suggestion on techpattern.com/forums.

Requires Perl module Parallel::ForkManager, will exit if FORK 
is greater than 0 and module not present.

2. Finally, option to convert shn to flac. Requires shorten codec 
library and ffmpeg. 

See README.txt for where to find the shorten codec if you don't 
have it (hint: if you can play shn files, you probably have it).

3. New option: -a/--append, which lets you append more copy types
on a one time basis to your existing list. This can be useful if
for example you are doing a one time conversion of a mixed flac/shn
directory to all flac: 
acxi -i shn -o flac -s /my/shn-flacs -d /my/flacs -a flac 
will copy over your flacs to the flac, if any found, and convert
the shn to flac.

4. Got rid of some confusing terms for screen output:
--debug becomes --full
--default becomes --basic
And all can now be triggered by the new --log [0-3] if you prefer
that way to trigger verbosity levels. --debug will keep working 
but may be used for something else in future versions.

4. Redo of man and help. Help reorganized into  two sections, one
for syncing options, like -c, -a, -d, -s, -i, -o, --fork, etc. The
other is for screen output options, like -h, --version, --log, 
--basic, --full, --verbose.

5. Internal refactor to use packages/classes in some areas like
Validation and configuration file processing. This makes the code
easier to work on since you can fold those packages away in your
code editor.

===================================================================
Date: 2019-07-05
Version: 3.1.3
-------------------------------------------------------------------
* Issue #2 - fix for failure of File::Find to detect files or
directories in a cifs mounted smb file system. Added default
$File::Find::dont_use_nlink = 1 with override --nlink which sets it
to 0, --no-nlink which sets it to 1, default, plus configuration 
item which allows for override as well via DONT_USE_NLINK item. 
Values 0 or 1. 1 is default.

Updates to man page as well to note the new options and explanation.
===================================================================
Date: 2019-07-04
Version: 3.1.2
-------------------------------------------------------------------
* Fixed 1 bug, when -q used, failed to assign quality level to opus.
* Improved error handling, now prints out all pretest errors before
exiting. This should make it easier for new users to figure out how
to setup acxi. Also made tests more granular, now does not run 
quality or application present tests if invalid input/output type.
Note that acxi will exit with the last error return number found
in that case.
===================================================================
Date: 2019-01-03
Version: 3.1.1
-------------------------------------------------------------------
* Fixed 1 bug, ogg quality level assigned to opus which leads to
the worst quality level for opus.
* Added two filters (for " and $) in path/file name. This
corrected issue #1 by gyratory. Thanks gyratory for finding
that oversight and filing an issue report.

===================================================================
Date: 2018-12-18
Version: 3.1.0
-------------------------------------------------------------------
* Adds support for Opus output type.
* Adds Ogg quality fractional levels, and the -1 value.
* Corrects man/comments/help inconsistencies.

===================================================================
Date: 2018-12-07
Version: 3.0.0
-------------------------------------------------------------------
* Improved error handling. More protections in place against
user configuration and option use errors.
* New --test option to test your configurations before
actually running the syncs live.
* New --clean option to remove files/directories not found in your 
source directory. Includes protections against accidental use.
* Improved output formatting, should usually fit in 80 column display.
* The ability to have your target (compressed, lossy) directory 
inside your source directory.
* Modernized Perl 5. The Perl runs with warnings/strict mode 
enabled as well.
* A man page is now available. 
* Some tagging bugs were also fixed for flac->mp3 generation. 
